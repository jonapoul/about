package com.jonapoul.about

import androidx.annotation.StringRes

/**
 * Defines a group of [AboutItem]s with a string to be displayed above. These will be placed into a
 * MaterialCardView inside either an [AboutDialogBuilder] or an [AboutFragment].
 * @param items The list of entries to be displayed under this group.
 * @param title The string resource ID of the section title. If null, no title will be displayed.
 */
data class AboutSection(
    val items: List<AboutItem>,
    @StringRes val title: Int? = null,
) {
    /**
     * Companion object
     */
    companion object {
        /**
         * Constructs an [AboutSection] containing three or four [AboutItem]s to describe the app's
         * build state.
         * @param versionName Should be BuildConfig.VERSION_NAME
         * @param versionCode Should be BuildConfig.VERSION_CODE
         * @param buildType Should be BuildConfig.BUILD_TYPE
         * @param buildTimeMs Should be BuildConfig.BUILD_TIME_MS (generated by a custom buildConfigField)
         */
        fun fromBuildInfo(
            versionName: String,
            versionCode: Int,
            buildType: String,
            buildTimeMs: Long? = null
        ): AboutSection = AboutSection(
            title = R.string.build_info,
            items = mutableListOf(
                AboutItem.fromVersion(versionName, versionCode),
                AboutItem.fromBuildType(buildType),
            ).also {
                if (buildTimeMs != null) {
                    it.add(AboutItem.fromBuildTimeMs(buildTimeMs))
                }
            }
        )

        /**
         * Constructs an [AboutSection] containing three [AboutItem]s to describe the app's
         * build state. This is done using reflection to access the contents of the passed
         * BuildConfig class, which should be that generated by the application (rather than this
         * library, for example)
         * @param buildConfig The calling app's BuildConfig generated class
         */
        @Throws(NoSuchFieldException::class)
        fun fromBuildConfig(buildConfig: Class<*>): AboutSection = fromBuildInfo(
            versionName = getStaticMember(buildConfig, "VERSION_NAME"),
            versionCode = getStaticMember(buildConfig, "VERSION_CODE"),
            buildType = getStaticMember(buildConfig, "BUILD_TYPE"),
        )

        /**
         * Constructs an [AboutSection] containing four [AboutItem]s to describe the app's
         * build state. This is done using reflection to access the contents of the passed
         * BuildConfig class, which should be that generated by the application (rather than this
         * library, for example). This implementation of the [fromBuildConfig] method will also
         * include the app's build time, if such a BuildConfig field has been set. The name of this
         * custom field is passed as a parameter.
         * @param buildConfig The calling app's BuildConfig generated class
         * @param buildTimeMsField The name of the custom BuildConfig field, as set in the app's
         *                         build.gradle file
         */
        @Throws(NoSuchFieldException::class)
        fun fromBuildConfig(
            buildConfig: Class<*>,
            buildTimeMsField: String
        ): AboutSection = fromBuildInfo(
            versionName = getStaticMember(buildConfig, "VERSION_NAME"),
            versionCode = getStaticMember(buildConfig, "VERSION_CODE"),
            buildType = getStaticMember(buildConfig, "BUILD_TYPE"),
            buildTimeMs = getStaticMember(buildConfig, buildTimeMsField),
        )

        @Suppress("UNCHECKED_CAST")
        private fun <T> getStaticMember(clazz: Class<*>, fieldName: String): T {
            val field = clazz.getField(fieldName)
            return field.get(null) as T
        }
    }
}
